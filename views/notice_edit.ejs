<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
  <link rel='stylesheet' href='/stylesheets/notice.css' />
  <link rel='stylesheet' href='/stylesheets/bootstrap.min.css' />
  <link rel='stylesheet' href='/stylesheets/font-awesome.min.css' />
  <script src="/javascripts/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

  <title>
    <%= title %>
  </title>
  <style>
    .ql-size {
    font-size: inherit;
  }

  .ql-size.ql-picker {
    width: 80px;  /* Điều chỉnh nếu cần */
  }

  .ql-size.ql-picker .ql-picker-label {
    line-height: 1.5;
    padding-right: 15px;
  }

  .ql-size.ql-picker .ql-picker-item {
    line-height: 1.5;
  }

.ql-snow .ql-picker.ql-size .ql-picker-label[data-value='12px']::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='12px']::before {
    content: '12px';
}


.ql-snow .ql-picker.ql-size .ql-picker-label[data-value='16px']::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='16px']::before {
    content: '16px';
}



.ql-snow .ql-picker.ql-size .ql-picker-label[data-value='20px']::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='20px']::before {
    content: '20px';
}

.ql-snow .ql-picker.ql-size .ql-picker-label[data-value='24px']::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='24px']::before {
    content: '24px';
}

.ql-snow .ql-picker.ql-size .ql-picker-label[data-value='28px']::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value='28px']::before {
    content: '28px';
}


    #editor {
      height: 250px;
    }
    #charCount{
      display: none;
    }
  </style>
  <script>

    // Config read file
    function readImage() {
      var fileURL = '/config/image_extension.ini'; // 
      var xhr = new XMLHttpRequest();
      xhr.open('GET', fileURL, true);

      xhr.onreadystatechange = function() {
        if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
          var content1 = xhr.responseText;
          displayContent1(content1);
        }
      };
      xhr.send();
    }
    function displayContent1(content1) {
       var fileInput = document.getElementById('myimage');
      fileInput.accept =content1;

    }

    function readFile() {
      var fileURL = '/config/file_extension.ini'; // 
      var xhr = new XMLHttpRequest();
      xhr.open('GET', fileURL, true);

      xhr.onreadystatechange = function() {
        if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
          var content2 = xhr.responseText;
          displayContent2(content2);
        }
      };
      xhr.send();
    }
    function displayContent2(content2) {
       var fileInput = document.getElementById('myfile');
      fileInput.accept =content2;

    }

    function readVideo() {
      var fileURL = '/config/video_extension.ini'; // Điền đúng đường dẫn đến file.txt của bạn
      var xhr = new XMLHttpRequest();
      xhr.open('GET', fileURL, true);

      xhr.onreadystatechange = function() {
        if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
          var content3 = xhr.responseText;
          displayContent3(content3);
        }
      };
      xhr.send();
    }
    function displayContent3(content3) {
       var fileInput = document.getElementById('myvideo');
      fileInput.accept =content3;

    }


    // end config read file


    function checkall() {
      var countOfCheck = 0;
      if ((document.getElementById('searchoption').value != "op1") && (document.getElementById('searchoption').value != "op2") && (document.getElementById('searchoption').value != "op3") && (document.getElementById('searchoption').value != "op4") && (document.getElementById('searchoption').value != "op5")) {
        var modal = document.getElementById("checkSelect");
        modal.style.display = "block";
        countOfCheck += 1;
        return false;
      }


      if (document.getElementById('txttitle').value == "") {
        var modal = document.getElementById("checkTitle");
        modal.style.display = "block";
        countOfCheck += 1;
        return false;
      }

      //check content empty
      //  if (document.getElementById('charCount').innerHTML == 0) {
      //   var modal = document.getElementById("checkContent");
      //   modal.style.display = "block";
      //   countOfCheck += 1;
      //   return false;
      // }

      if (document.getElementById('charCount').innerHTML >5000) {
        var modal = document.getElementById("checkContent2");
        modal.style.display = "block";
        countOfCheck += 1;
        return false;
      }
      return true;
    }
    
    function checkSubmit(){
      if(checkall() == true){
        saveContent();
       // alert("submit");

      }else{
        //alert("cannot");
      }

    }

    function hideCheckSelect() {
      var modal = document.getElementById("checkSelect");
      document.getElementById('searchoption').focus();
      modal.style.display = "none";
    }

    function hideCheckTitle() {
      var modal = document.getElementById("checkTitle");
      document.getElementById('txttitle').focus();
      modal.style.display = "none";
    }

    function hideCheckContent() {
      var modal = document.getElementById("checkContent");
      document.getElementById('editor').focus();
      modal.style.display = "none";
    }

    function hideCheckContent2() {
      var modal = document.getElementById("checkContent2");
      document.getElementById('content').focus();
      modal.style.display = "none";
    }




    function noticeBoxShow() {
      // document.getElementById("editorMain").value = '';
      var modal = document.getElementById("notice");
      modal.style.display = "block";
    }

    function noticeBoxHide() {
      var modal = document.getElementById("notice");
      modal.style.display = "none";
    }


    // Add file
    function addFileShow() {
      // document.getElementById("editorMain").value = '';
      var modal = document.getElementById("addfile");
      modal.style.display = "block";
    }

    function hideAddFile() {
      var modal = document.getElementById("addfile");
      modal.style.display = "none";
      var fileInput = document.getElementById('myfile');
      var fileName = fileInput.files[0].name;
      document.getElementById("txtfileupload").innerHTML = fileName;
      document.getElementById("sendFileName").value =  fileName;
      document.fsubmitfile.submit();
    }

    function closeBoxAddfile() {
      var modal = document.getElementById("addfile");

      modal.style.display = "none";

    }



  </script>

</head>

<body onLoad="noticeBoxShow(); readFile();">

<!--show box to add image -->
<div id='addImage' class='messBox'>
  <div class='modalmess-content d-flex flex-column p-2'>
    <div class="btnX "><button onclick='closeBoxAddimage()'>X</button></div>
    <p class="p-1 d-flex ">Please choose image! </p>
    <div class="choosefile">
      <form action="/notice/uploadimage" name="fsubmitimage" method="POST" enctype="multipart/form-data">
        <input type="file" name="myimage" id="myimage" class="inputfile inputfile-6" accept="">
        <label for="myimage"><span id="hidfile1"></span> </label>
        <label for="myimage">
          <div class="btnfile" id="selectimage"> Select image</div>
        </label>
        <script src="/javascripts/custom-file-input.js"></script>
    </div>
    <p class="d-flex flex-row-reverse">
      <button class='btn btn-dark btnFileUpload' onclick="hideAddImage()">Upload</button>
      </form>
    </p>
  </div>
</div>


  <!--show box to add video -->
  <div id='addVideo' class='messBox'>
    <div class='modalmess-content d-flex flex-column p-2'>
      <div class="btnX "><button onclick='closeBoxAddvideo()'>X</button></div>
      <p class="p-1 d-flex ">Please choose video! </p>
      <div class="choosefile">
        <form action="/notice/uploadvideo" name="fsubmitvideo" method="POST" enctype="multipart/form-data">
          <input type="file" name="myvideo" id="myvideo" class="inputfile inputfile-6" accept="">
          <label for="myvideo"><span id="hidfile1"></span> </label>
          <label for="myvideo">
            <div class="btnfile"> Select video</div>
          </label>
          <script src="/javascripts/custom-file-input.js"></script>
      </div>
      <p class="d-flex flex-row-reverse">
        <button class='btn btn-dark btnFileUpload' onclick="hideAddVideo()">Upload</button>
        </form>
      </p>
    </div>
  </div>

  <!--show box to add file -->
  <div id='addfile' class='messBox'>

    <div class='modalmess-content d-flex flex-column p-2'>
      <div class="btnX "><button onclick='closeBoxAddfile()'>X</button></div>
      <p class="p-1 d-flex ">Please choose file! </p>
      <div class="choosefile">
        <form action="/notice/uploadfile" name="fsubmitfile" method="POST" enctype="multipart/form-data">
          <input type="file" name="myfile" id="myfile" class="inputfile inputfile-6" accept="">
          <label for="myfile"><span id="hidfile1"></span> </label>
          <label for="myfile">
            <div class="btnfile"> Select file</div>
          </label>
          <script src="/javascripts/custom-file-input.js"></script>
      </div>
      <p class="d-flex flex-row-reverse">
        <button class='btn btn-dark btnFileUpload' onclick="hideAddFile()">Upload</button>
        </form>
      </p>
    </div>
  </div>

  <!--empty title -->
  <div id='checkSelect' class='messBox'>
    <div class='modalmess-content d-flex flex-column'>
      <p class="p-5 d-flex ">Please choose category!</p>
      <p class="p-3 d-flex flex-row-reverse ">
        <a href='#' onclick='hideCheckSelect();' class='btn btn-dark '>Confirm</a>

      </p>
    </div>
  </div>

  <!--empty title -->
  <div id='checkTitle' class='messBox'>
    <div class='modalmess-content d-flex flex-column'>
      <p class="p-5 d-flex ">Please type title!</p>
      <p class="p-3 d-flex flex-row-reverse ">
        <a href='#' onclick='hideCheckTitle();' class='btn btn-dark '>Confirm</a>

      </p>
    </div>
  </div>

  <!--empty content -->
  <div id='checkContent' class='messBox'>
    <div class='modalmess-content d-flex flex-column'>
      <p class="p-5 d-flex ">Please type content! </p>
      <p class="p-3 d-flex flex-row-reverse ">
        <a href='#' onclick='hideCheckContent();' class='btn btn-dark '>Confirm</a>

      </p>
    </div>
  </div>

  <!--max content -->
  <div id='checkContent2' class='messBox'>
    <div class='modalmess-content d-flex flex-column'>
      <p class="p-5 d-flex ">The length of content must be less than 5000 characters! </p>
      <p class="mb-3 pe-3  d-flex flex-row-reverse " id="editConfirmCheckLength">
        <a href='#' onclick='hideCheckContent2();' class='btn btn-dark '>Confirm</a>

      </p>
    </div>
  </div>


  <div id='notice' class='modal'>
    <div class='modal-content'>
      <form action="/notice/proAddNotice"  name="fadd">
        <div class="d-flex flex-column">
          <div class="p-2 d-flex flex-row-reverse ">
            <a href='/notice' onclick='noticeBoxHide();' class='btn btn-dark btnfix'>X</a>
          </div>

           <!-- show data from data base to modifine -->
           <% if(Data.length> 0)
           {
           Data.forEach(function(data){
            
           %>

          <div class="p-2">
            <div id="title">
              <select class="form-select form-select-sm" aria-label="GFG Small Select" name="searchoption"
                id="searchoption">
                <option >Select a category</option>
                  <option value="op1" <% if(data.category=='Announcement' ){ %> selected <% } %> >Announcement</option>
                  <option value="op2" <% if(data.category=='Suggestion' ){ %> selected <% } %> >Suggestion</option>
                  <option value="op3" <% if(data.category=='Opinion' ){ %> selected <% } %> >Opinion</option>
                  <option value="op4" <% if(data.category=='Request' ){ %> selected <% } %> >Request</option>
                  <option value="op5" <% if(data.category=='Reference' ){ %> selected <% } %> >Reference</option>
              </select>
              <input type="text" placeholder="Type your title" id="txttitle" name="txtTitle" value="<%= data.title %>" >
            </div>
          </div>

          <div class="p-2">
            <div id="addFile">
              <i class="fa fa-upload" style="font-size:18px" onclick="addFileShow()"></i> 
            </div>

            <input type="hidden" name="txtid" id="txtid" value="<%= data.id %> ">
            <input type="hidden" name="txtsendWriter" id="txtsendWriter" value="<%= data.writer %> ">


            <div id="trinhsoanthao">
              <div id="editor">
                <%- data.content %>

              </div>
              <!-- <button onclick="saveContent()">Save</button> -->
              <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
              <script src="/javascripts/image-resize.min.js"></script>
              <script>

                var Size = Quill.import('attributors/style/size');
                Size.whitelist = ['12px', '16px', '20px', '24px', '28px'];
                Quill.register(Size, true);

                var quill = new Quill('#editor', {
                  theme: 'snow',
                  placeholder: 'Type your content...',
                  modules: {
                    toolbar: [
                      ['bold', 'italic', 'underline'],
                      [{ 'color': [] }],
                      [{ 'font': [] }],          // dropdown with defaults from theme
                      [{ 'align': ''}, {'align': 'center'},{'align': 'right'},],
                      [{ 'size': ['12px', '16px', '20px', '24px', '28px'] }],
                      ['image', 'video', 'link']
                    ],
                    imageResize: {
                    }
                  }
                });
                function saveContent() {
                  const content = quill.root.innerHTML;
                  let searchoption = document.getElementById('searchoption').value;
                  let txtTitle = document.getElementById('txttitle').value;
                  let txtfileupload = document.getElementById('sendFileName').value;
                  let txtid = document.getElementById('txtid').value;
                  let txtsendWriter = document.getElementById('txtsendWriter').value;

                  

                  

                  let formData = new URLSearchParams();
                  formData.append('content', content);
                  formData.append('searchoption', searchoption);
                  formData.append('txttitle', txtTitle);
                  formData.append('txtfileupload', txtfileupload);
                  formData.append('txtid', txtid);
                  formData.append('txtsendWriter', txtsendWriter);


                  fetch('/notice/proUpdateNotice', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: formData
                  })
                  .then(window.location.href = '/notice/messupdate'); //.then(window.location.href = '/notice/messupdate');
                }//saveContent


                quill.getModule('toolbar').addHandler('image', () => {
                  const input = document.createElement('input');
                  input.setAttribute('type', 'file');
                  input.setAttribute('accept', 'image/*');
                  input.click();

                  input.onchange = () => {
                    const file = input.files[0];
                    if (/^image\//.test(file.type)) {
                      saveToServer(file).then((url) => {
                        const range = quill.getSelection(true);
                        quill.insertEmbed(range.index, 'image', url);
                      });
                    } else {
                      console.warn('You can only upload images');
                    }
                  };
                });

               

                function saveToServer(file) {
                  return new Promise((resolve, reject) => {
                    const formData = new FormData();
                    formData.append('image', file);

                    fetch('/upload', {
                      method: 'POST',
                      body: formData
                    })
                      .then(response => response.json())
                      .then(data => {
                        if (data.imageUrl) {
                          resolve(data.imageUrl);

                        } else {
                          reject('Upload failed');
                        }
                      })
                      .catch(error => {
                        reject('Upload error');
                      });
                  });
                }

                 
                //count char
                function updateCharCount() {
                    let contentText = quill.getText();
                    let charCount = contentText.length - 1; // trừ đi ký tự xuống dòng cuối cùng
                    document.getElementById('charCount').innerText = charCount;
                }

                // Lắng nghe sự kiện text-change từ Quill editor
                quill.on('text-change', function() {
                    updateCharCount();
                });

                  // Gọi lần đầu tiên khi khởi tạo
                  updateCharCount();
                  
                //end count char



              </script>

            </div><!--end trinh soan thao-->

            <!-- <input type="text" id="charCount"> -->
            <span id="charCount">0</span>


          </div>
          <div class=" d-flex ">
            
           
            
            <span id="txtfileupload">
              <% const strFile=data.fileUpload.toString();
                
              function removeTextBeforeUnderscore(inputString) {
                const underscoreIndex = inputString.indexOf('_');
                if (underscoreIndex !== -1) {
                  return inputString.substring(underscoreIndex + 1);
                } else {
                  return inputString;
                }
              }

              %>
                <%= 
                
                removeTextBeforeUnderscore(strFile);
                
                %>

            </span>
            <input type="hidden" name="txtfileupload" id="sendFileName" value="<%=  removeTextBeforeUnderscore(strFile); %> ">

            

            

            <!-- <input type="hidden" name="txtsendWriter" value="txtsendWriter"> -->

          </div>


          <% }); } else { %>
            No Data Found
            <% } %>

          <div class="p-2 d-flex flex-row-reverse ">
            <button class="btn btn-primary" id="btnUpload" type="button" onclick="checkSubmit()">Update</button>

          </div>


        </div><!--end flex-->
      </form>

    </div><!--end modal-content-->
  </div><!--end loginfail-->

  



</body>

</html>